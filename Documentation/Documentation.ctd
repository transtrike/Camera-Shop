<?xml version="1.0" ?>
<cherrytree>
	<node custom_icon_id="0" foreground="" is_bold="True" name="Application Info" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1589112848.53" ts_lastsave="1589620094.01" unique_id="4">
		<rich_text>- Has to include CRUD operations(preferably with LINQ)
- Database: MySQL or MariaDB
- Name: Camera Shop
- One common header and footer
- MVC type application</rich_text>
	</node>
	<node custom_icon_id="0" foreground="" is_bold="True" name="Ideas" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1589620037.07" ts_lastsave="1589621342.69" unique_id="17">
		<rich_text># Camera Shop 
- You can choose a camera from the menu at index page
# Every camera will have a big image of it and sectons(bars/buttons)
--- Section 1: Specifications (view the camera's specifications)
--- Section 2: Photos (photos, made by the camera/can be submitted by the users)
--- Section 3: Reviews (users made reviews about the product)
# Can contain “Tips&amp;Tricks”  section(global and related to specifc cameras)
# Can contain &quot;Camera Basics&quot; section</rich_text>
	</node>
	<node custom_icon_id="0" foreground="" is_bold="True" name="My Notes" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1589488958.01" ts_lastsave="1589619479.16" unique_id="13">
		<rich_text># </rich_text>
		<rich_text style="italic">Mapping:
- A {Name}Controller inherits : Controller
- In the View folder: folder with {Name} and Index.cshtml
- In the View/{Name}/Index.cshtml -&gt; @Model Camera_Shop.Controllers.{Name}Controller</rich_text>
		<rich_text>

# Data Passing(Controller -&gt; View)
- In the controller(from a method or passed directly)
- Controller -&gt; ViewData[&quot;Msg&quot;] = “Hi”;
                     → return View();
- RazorP. -&gt; &lt;p1&gt;@ViewData[&quot;Msg&quot;]&lt;/p1&gt;

# Data Passing(Controller -&gt; Model -&gt; View)
</rich_text>
	</node>
	<node custom_icon_id="0" foreground="" is_bold="True" name="Controllers" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1589112674.68" ts_lastsave="1589620115.74" unique_id="1">
		<rich_text># Controller list
- DBController
- </rich_text>
		<rich_text link="node 5">IndexController</rich_text>
		<rich_text>

# Properties
- Every controller will contain a main header and footer

</rich_text>
		<node custom_icon_id="0" foreground="" is_bold="False" name="DBController(Scrapped)" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1589112712.26" ts_lastsave="1589403350.36" unique_id="2">
			<rich_text># Controller for the database
- Makes the connection to and from the database
- All requests go though the controller 
- Includes validation of the given data to prevent SQL injections
- Prefered method - trough LINQ

# Constructor
- Establishes the connection to the database and stores it localy

# Destructor
- Closes the connection and clears the data

# Connection()
- Returns the connection to the database

# ExecuteCommand()
- Execute a command to the database (no return OR rows affected)

# ExecureReader()
- Executes a command to the database and returns the result
</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="HomeController" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1589121650.61" ts_lastsave="1589619616.05" unique_id="5">
			<rich_text># Controller for the main page of the application
- Provides the main page of the application
- Redirects to the pages nessessary
- Contains the current logged user(optional/unknown can it be done)
- </rich_text>
		</node>
	</node>
	<node custom_icon_id="0" foreground="" is_bold="True" name="Database" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1589407360.47" ts_lastsave="1589620120.72" unique_id="7">
		<rich_text></rich_text>
		<node custom_icon_id="0" foreground="" is_bold="False" name="Connection" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1589407386.3" ts_lastsave="1589407386.3" unique_id="8">
			<rich_text></rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="DbSet(don't think is needed)" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1589407395.66" ts_lastsave="1589619655.49" unique_id="9">
			<rich_text></rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="DbContext(don't think is needed)" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1589407406.31" ts_lastsave="1589619662.17" unique_id="10">
			<rich_text></rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="ChangeTracker" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1589407423.6" ts_lastsave="1589489764.99" unique_id="11">
			<rich_text># Idea
- 3 Lists:
--- Added (stores added entities)
--- Removed (stores removed entities)
--- AllEntities (stores modified entities)

# Structure
LIst&lt;TCamera&gt; Added;
LIst&lt;TCamera&gt; Removed;
LIst&lt;TCamera&gt; AllEntities;

public void Added();
public void Removed();
public void AllEntities();</rich_text>
		</node>
	</node>
	<node custom_icon_id="0" foreground="" is_bold="True" name="Entities" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1589619693.47" ts_lastsave="1589620124.43" unique_id="14">
		<rich_text></rich_text>
		<node custom_icon_id="0" foreground="" is_bold="False" name="Camera" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1589619714.88" ts_lastsave="1589621297.16" unique_id="15">
			<rich_text># Properties (required)
- DatabaseId(hidden)
- Name
- Specifications(class)
- CameraTipsAndTricks(replated to the specific camera)

# Properties (optional)
- Photos
- 
</rich_text>
			<node custom_icon_id="0" foreground="" is_bold="False" name="Specifications'" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1589619814.06" ts_lastsave="1589622910.64" unique_id="16">
				<rich_text># Properties (required)
- MP Count and pixel count (ex: 6000x4000)
- ISO (base, max, extended)
- Max Shutter Speed (1/4000)
--- Max Electronic Shutter Speed (1/25000)
- FPS Continues AF
- FPS Single AF
- Battery Type and Battery Life
- Sensor Type and construction (ex: Full-Frame CMOS)
- Size and weight 
- Image stabilization (has ot not)

#Properties (optional)
- Release date 
- Dynamic range
- Shutter lag</rich_text>
			</node>
		</node>
	</node>
	<node custom_icon_id="0" foreground="" is_bold="True" name="Unit Testing" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1589488928.62" ts_lastsave="1589620128.43" unique_id="12">
		<rich_text></rich_text>
	</node>
</cherrytree>
